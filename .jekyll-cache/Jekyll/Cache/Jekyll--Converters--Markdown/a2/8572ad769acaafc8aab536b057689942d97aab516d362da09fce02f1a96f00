I")<p>这是个很奇怪的问题，这个问题困扰我的时间也最长，要先从id说起：</p>

<div class="language-objc highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">typedef</span> <span class="k">struct</span> <span class="n">objc_object</span> <span class="o">*</span><span class="n">id</span><span class="p">;</span>
<span class="k">struct</span> <span class="n">objc_object</span> <span class="p">{</span>
    <span class="n">Class</span> <span class="n">isa</span><span class="p">;</span>
<span class="p">};</span>
<span class="k">typedef</span> <span class="k">struct</span> <span class="n">objc_class</span> <span class="o">*</span><span class="n">Class</span><span class="p">;</span>
</code></pre></div></div>

<p>OC中的对象都可以用<code class="highlighter-rouge">id</code>来表示，<code class="highlighter-rouge">id</code>是一个<code class="highlighter-rouge">objc_object</code>结构体指针，这个结构体中只有一个成员是<code class="highlighter-rouge">isa</code>。<code class="highlighter-rouge">isa</code>代表了这个对象的类型：
这句代码：</p>

<div class="language-objc highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Class</span> <span class="n">clz</span> <span class="o">=</span> <span class="p">[</span><span class="n">obj</span> <span class="nf">Class</span><span class="p">];</span>
</code></pre></div></div>

<p>等价于：</p>

<div class="language-objc highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">objc_class</span><span class="o">*</span> <span class="n">clz</span> <span class="o">=</span> <span class="n">obj</span><span class="o">-&gt;</span><span class="n">isa</span>
</code></pre></div></div>

<p><code class="highlighter-rouge">objc_class</code>这个结构体的定义为：</p>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">struct</span> <span class="n">objc_class</span> <span class="p">{</span>
    <span class="n">Class</span> <span class="n">isa</span>  
    <span class="n">Class</span> <span class="n">super_class</span>                                       
    <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">name</span>                                        
    <span class="kt">long</span> <span class="n">version</span>                                           
    <span class="kt">long</span> <span class="n">info</span>                                               
    <span class="kt">long</span> <span class="n">instance_size</span>                                    
    <span class="k">struct</span> <span class="n">objc_ivar_list</span> <span class="o">*</span><span class="n">ivars</span>                         
    <span class="k">struct</span> <span class="n">objc_method_list</span> <span class="o">**</span><span class="n">methodLists</span>                  
    <span class="k">struct</span> <span class="n">objc_cache</span> <span class="o">*</span><span class="n">cache</span>                             
    <span class="k">struct</span> <span class="n">objc_protocol_list</span> <span class="o">*</span><span class="n">protocols</span>                   
<span class="p">}</span> 
</code></pre></div></div>

<p>那么就有:</p>

<div class="language-objc highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">objc_class</span><span class="o">*</span> <span class="n">clz_Meta</span> <span class="o">=</span> <span class="n">obj</span><span class="o">-&gt;</span><span class="n">isa</span><span class="o">-&gt;</span><span class="n">isa</span><span class="err">。</span>
</code></pre></div></div>

<p>Apple对<code class="highlighter-rouge">clz_Meta</code>的描述是MetaClass，也就是<code class="highlighter-rouge">Class</code>的class，这也不难理解，因为<code class="highlighter-rouge">clz</code>同样可以接受message：<code class="highlighter-rouge">[clz new]</code>,也有自己的类方法。</p>

<p>上面描述的结构如下图所示：</p>

<p><img src="/assets/images/2012/02/class_hierarchy.png" alt="" /></p>

<p>然后问题是：<code class="highlighter-rouge">obj-&gt;isa-&gt;isa-&gt;isa</code>指向哪里？</p>

<p>想不明白就来动手试试：</p>

<div class="language-objc highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">@interface</span> <span class="nc">SomeClass</span> <span class="p">:</span> <span class="nc">NSObject</span>
<span class="k">@property</span><span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span><span class="n">assign</span><span class="p">)</span> <span class="kt">int</span> <span class="n">a</span><span class="p">;</span>
<span class="k">@end</span>

<span class="k">@implementation</span> <span class="nc">SomeClass</span>
<span class="k">@end</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span><span class="n">argv</span><span class="p">[])</span>
<span class="p">{</span>
    <span class="n">SomeClass</span><span class="o">*</span> <span class="n">obj</span> <span class="o">=</span> <span class="p">[</span><span class="n">SomeClass</span> <span class="nf">new</span><span class="p">];</span>    
    <span class="p">[</span><span class="n">obj</span> <span class="nf">release</span><span class="p">];</span>
    <span class="n">obj</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">;</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>然后我们用GDB调试：</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">(</span>gdb<span class="o">)</span> p <span class="o">(</span>Class<span class="o">)[</span>obj class]
<span class="nv">$3</span> <span class="o">=</span> <span class="o">(</span>Class<span class="o">)</span> 0x3668
<span class="o">(</span>gdb<span class="o">)</span> p obj-&gt;isa
<span class="nv">$2</span> <span class="o">=</span> <span class="o">(</span>Class<span class="o">)</span> 0x3668
</code></pre></div></div>

<p>这说明<code class="highlighter-rouge">[obj Class]</code>等价于<code class="highlighter-rouge">obj-&gt;isa</code>，复合我们的预期，然后我们看看<code class="highlighter-rouge">objc_class</code>这个结构体中的状态：</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">(</span>gdb<span class="o">)</span> p <span class="k">*</span>obj-&gt;isa
<span class="nv">$7</span> <span class="o">=</span> <span class="o">{</span>
  isa <span class="o">=</span> 0x3654, 
  super_class <span class="o">=</span> 0x11d4bc0, 
  name <span class="o">=</span> 0x718e150 <span class="s2">"</span><span class="se">\0</span><span class="s2">03"</span>, 
  version <span class="o">=</span> 18697404, 
  info <span class="o">=</span> 119070944, 
  instance_size <span class="o">=</span> 13968, 
  ivars <span class="o">=</span> 0x7fa62c, 
  methodLists <span class="o">=</span> 0x11d9e40, 
  cache <span class="o">=</span> 0x11d4cbc, 
  protocols <span class="o">=</span> 0x3558
<span class="o">}</span>
</code></pre></div></div>

<p>我们看到了MetaClass也就是<code class="highlighter-rouge">obj-&gt;isa-&gt;isa</code>指向<code class="highlighter-rouge">了0x3654</code>，我们用GDB调试下：</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">(</span>gdb<span class="o">)</span> p obj-&gt;isa-&gt;isa
<span class="nv">$8</span> <span class="o">=</span> <span class="o">(</span>Class<span class="o">)</span> 0x3654
</code></pre></div></div>

<p>接着，我么再看看MetaClass的objc_class结构体：</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">(</span>gdb<span class="o">)</span> p <span class="k">*</span>obj-&gt;isa-&gt;isa
<span class="nv">$6</span> <span class="o">=</span> <span class="o">{</span>
  isa <span class="o">=</span> 0x11d4bd4, 
  super_class <span class="o">=</span> 0x11d4bd4, 
  name <span class="o">=</span> 0x718e130 <span class="s2">"</span><span class="se">\0</span><span class="s2">03"</span>, 
  version <span class="o">=</span> 18697404, 
  info <span class="o">=</span> 119070912, 
  instance_size <span class="o">=</span> 13908, 
  ivars <span class="o">=</span> 0x11d4bc0, 
  methodLists <span class="o">=</span> 0x718e150, 
  cache <span class="o">=</span> 0x11d4cbc, 
  protocols <span class="o">=</span> 0x718e0e0
  <span class="o">}</span>
</code></pre></div></div>

<p>看到MetaClass对象的<code class="highlighter-rouge">isa</code>指向了<code class="highlighter-rouge">0x11d4bd4</code>，即<code class="highlighter-rouge">obj-&gt;isa-&gt;isa = 0x11d4bd4</code>。这个时候我们发现super_class也是<code class="highlighter-rouge">0x11d4bd4</code>，也就是说MetaClass的<code class="highlighter-rouge">isa</code>指向了其父类，我们看看它父类是什么？</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">(</span>gdb<span class="o">)</span> po obj-&gt;isa-&gt;isa-&gt;isa
NSObject
</code></pre></div></div>
<p>MetaClass对象的<code class="highlighter-rouge">isa</code>指向了super_class，那<code class="highlighter-rouge">super_class</code>的父类，也就是<code class="highlighter-rouge">NSObject</code>的<code class="highlighter-rouge">MetaClass</code>对象的<code class="highlighter-rouge">super_class</code>指向哪里？</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">(</span>gdb<span class="o">)</span> po obj-&gt;isa-&gt;isa-&gt;isa-&gt;super_class-&gt;super_class
Can<span class="s1">'t print the description of a NIL object.
</span></code></pre></div></div>

<p><code class="highlighter-rouge">Nil</code>是我们期待的结果，到这里，我们应该把上面的图再改一改：</p>

<p><img src="/assets/images/2012/02/class_hierarchy-2.png" alt="" /></p>

<p class="md-p-center md-margin-top-24">（全文完）</p>

:ET